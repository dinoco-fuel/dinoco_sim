# -*- coding: utf-8 -*-
"""set_site_comps.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uz0aNjt4ZxV7kMJZhlc00sHId2GcWL8Y
"""

import random
import math

def genSiteLatLong(dist, origin_lat, origin_long):
  #generate random bearing
  bearing = 2*math.pi*random.random()
  lat_miles = 69
  long_miles = 53

  #get North-South offset
  ns_offset = (math.sin(bearing) * dist)/69

  #get East-West offset
  ew_offset = (math.cos(bearing) * dist)/53


  comp_lat = ns_offset + origin_lat
  comp_long = ew_offset + origin_long

  return comp_lat, comp_long

#set key parameters to generate mock site data
firm_name = "Dinoco Fuel"
site_count = 1
init_site_id = 1000
comp_count = 10

#set geographic center (lat lon)
geo_center = [31.9686, -99.9018]

#set geographic dispersion (radius in miles)
area_spread = 3 * site_count
min_comp_dist = 0.1
max_comp_dist = 5.0

#create sequential sites numbers based on site_count
site_list = [*range(init_site_id,(init_site_id+site_count))]

#set competitor brand space - value is relative frequency
comp_list = {
              "Wawa":2,
              "Murphy USA":2,
              "Chevron":4,
              "Exxon":5,
              "BP":3,
              "Shell":5,
              "Racetrac":3,
              "Unbranded":10,
              "Circle K":5,
              "KwikTrip":2,
              "YesWay":1,
              "QuikTrip":2,
              "FasTrip":1,
              "Caseys":3,
              "Mavericks":1,
              "Sunoco":1,
              "7-11":7,
              "Sam's Club":0.1,
              "CostCo":0.1,
              "Bucees":0.05
            }

comp_total = sum(comp_list.values())

weighted_comp_list = {key: (value/comp_total) for key, value in comp_list.items()}

comp_list = list(weighted_comp_list.keys())
comp_weights = list(weighted_comp_list.values())

#print(random.choices(comp_list, weights=comp_weights, k=50))


for site in site_list:
    site_id = str(site)
    site_lat, site_long = genSiteLatLong(area_spread,geo_center[0], geo_center[1])
    key_comp = random.randrange(0,comp_count+1,1)
    
    
    for comp in range(0,comp_count):
        is_key = 0
        elast_top = 15
        elast_bottom = 0
        if comp == key_comp:
            is_key = 1
            elast_top = 50
            elast_bottom = 25
        comp_id = str(site*2+comp)
        comp_dist = random.randrange(min_comp_dist*100,max_comp_dist*100,10)/100
        comp_lat, comp_long = genSiteLatLong(comp_dist, site_lat, site_long)

        elast_coeff = random.randrange(elast_bottom, elast_top,1)/100


        comp_variance = 1


        comp_brand = ''.join(map(str,random.choices(comp_list, weights=comp_weights, k=1)))

        print(f"{site_id} - {comp_id} {comp_dist} {is_key} {elast_coeff} {comp_variance} {comp_brand} {comp_lat} {comp_long}")